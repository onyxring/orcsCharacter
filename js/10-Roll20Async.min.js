function setActiveCharacterId(t) { var e = getActiveCharacterId(), r = { id: "0", type: "setActiveCharacter", data: t }; if (null == self.dispatchEvent) self.onmessage({ data: r }); else { var a = new CustomEvent("message"); a.data = r, self.dispatchEvent(a) } return e } var _sIn = setInterval; setInterval = function (t, e) { var r = getActiveCharacterId(); _sIn((function () { var e = setActiveCharacterId(r); t(), setActiveCharacterId(e) }), e) }; var _sto = setTimeout; function getAttrsAsync(t) { var e = getActiveCharacterId(), r = null; return new Promise(((a, c) => { r = setActiveCharacterId(e); try { getAttrs(t, (t => { a(t) })) } catch { c() } })).finally((() => { setActiveCharacterId(r) })) } function setAttrsAsync(t, e) { var r = getActiveCharacterId(), a = null; return new Promise(((c, n) => { a = setActiveCharacterId(r); try { setAttrs(t, e, (t => { c(t) })) } catch { n() } })).finally((() => { setActiveCharacterId(a) })) } function getSectionIDsAsync(t) { var e = getActiveCharacterId(), r = null; return new Promise(((a, c) => { r = setActiveCharacterId(e); try { getSectionIDs(t, (t => { a(t) })) } catch { c() } })).finally((() => { setActiveCharacterId(r) })) } function getSingleAttrAsync(t) { var e = getActiveCharacterId(), r = null; return new Promise(((a, c) => { r = setActiveCharacterId(e); try { getAttrs([t], (e => { a(e[t]) })) } catch { c() } })).finally((() => { setActiveCharacterId(r) })) } setTimeout = function (t, e) { var r = getActiveCharacterId(); _sto((function () { var e = setActiveCharacterId(r); t(), setActiveCharacterId(e) }), e) };
